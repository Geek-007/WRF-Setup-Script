#Change these variables to match your versions
wrf_major_version="3"
wrf_minor_version="7"

#Change this if you don't want to install gcc/gfortran
compilers="gcc gfortran"

#Toggles for optional components
keep_namelists=true #WRF sometimes deletes namelist files on recompile.  This backs them up. [Default: true]
use_wrf_regex_fixes=false #If true, this script will automatically repair the configure.wrf file via a few perl regex scripts [Default: true]
use_wps_regex_fixes=true #If true, this script will automatically repair the configure.wps file via a few perl regex scripts [Default: true]
force_extract_tars=false #If true, the script always extracts every tarball, regardless if they already have been extracted [Default: false]
lazy_recompile=true #Don't recompile already compiled libs [Default: true]

#Paths
netcdf_prefix="/usr"

#Don't change any variables below this line unless absolutely necessary
wrf_version=$wrf_major_version.$wrf_minor_version
mpich_compilers=`CC=mpicc FC=mpif90`

#Untar'd paths
WRF_path="WRFV$wrf_major_version"
WRF_Chem_path="$WRF_path/chem"
WPS_path="WPS"


#DO NOT EDIT BELOW THIS LINE
#This calculates the directory in which the script was run
SOURCE="${BASH_SOURCE[0]}"
while [ -h "$SOURCE" ]; do # resolve $SOURCE until the file is no longer a symlink
  DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
  SOURCE="$(readlink "$SOURCE")"
  [[ $SOURCE != /* ]] && SOURCE="$DIR/$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it relative to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
